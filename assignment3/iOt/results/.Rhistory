# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.5","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.20
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.5","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.6
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.5","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.5","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1",discriminability,"d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d"+discriminability,"d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d"+str(discriminability),"d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1",str("d")+str(discriminability),"d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.575","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", title="ROC curve for fa= 0.045 & hit = 0.44", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.575","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.575","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
title(main = "ROC curve Hit versus false alarm")
library(ggplot2)
# create a series of x values
xvals = seq(-5, 13, 0.01)
mu1 = 2
mu2 = 5.15
sd = 2
dist_data = data.frame(x=xvals,
dist1 = dnorm(xvals, mean=mu1, sd=sd),
dist2 = dnorm(xvals, mean=mu2, sd=sd))
p_hit = 0.44
p_false_alarm = 0.045
#dist_1
decision_boundary_dist1 = qnorm(p_false_alarm, mean = mu1, sd = sd, lower.tail = FALSE)
#dist_2
decision_boundary_dist2 = qnorm(p_hit, mean = mu2, sd =sd, lower.tail = TRUE)
# plot probability of distribution 1 and distribution 2
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist1, color="distribution 1 (mu= 2, sd=2)")) +
geom_line(data=dist_data, aes(x=x, y=dist2, color="distribution 2 (mu= 5.7, sd=2)")) +
geom_point(data=data.frame(X=decision_boundary_dist1,Y=0), aes(x = X, y = Y),colour="green",size=4)+
geom_vline(xintercept = decision_boundary_dist1, linetype="dashed") +
ylab("Probability") +
xlab("X Values")
discriminability = (mu2-mu1)/sd
#ROC plot
# create a series of x values
plot(pnorm(xvals, mean=4, sd=sd), pnorm(xvals, mean=2, sd=sd), xlim = c(0, 1), ylim = c(0, 1), type = "l",  xlab = "false alarm", ylab = "hit", col = 'blue')
abline(0, 1, col= "black")
lines(pnorm(xvals, mean=6, sd=sd), pnorm(xvals, mean=2, sd=sd), col='green')
lines(pnorm(xvals, mean=mu2, sd=sd), pnorm(xvals, mean=mu1, sd=sd), col='red')
lines(pnorm(xvals, mean=8, sd=sd), pnorm(xvals, mean=2, sd=sd), col='yellow')
points(0.045,0.44, cex=2,pch=16,col="red")
legend("topleft", legend = c("d1","d1.575","d2","d3") , pch = 15, bty = 'n', col = c("blue",'red',"green",'yellow'))
title(main = "ROC curve Hit versus False Alarm")
load("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results/visualization.R")
load("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results/")
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1
ggplot(df, aes(x=created_at, y=field_1)) + geom_point() + geom_line()
library(ggplot2)
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
ggplot(df, aes(x=created_at, y=field_1)) + geom_point() + geom_line()
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
ggplot(df1, aes(x=created_at, y=field_1)) + geom_point() + geom_line()
View(df1)
View(df1)
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
ggplot(df1, aes(x=created_at, y=field1)) + geom_point() + geom_line()
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
ggplot(entry_id, aes(x=created_at, y=field1)) + geom_point() + geom_line()
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()
type(df1[0])
type(df1["entry_id"])
df1$time <- df %>% select(created_at) %>% strftime(created_at, format="%H:%M:%S")
df1$time <- df[df$created_at, format="%H:%M:%S"]
df1$time <- 0
View(df1)
df1$time <- df1$time
df1$time <- strftime(df1$time, format="%H:%M:%S")
View(df1)
View(df1)
df1$time <- strftime(df1$created_at, format="%H:%M:%S")
ggplot(df1, aes(x=time, y=field1)) + geom_point() + geom_line()
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=time, y=field1)) + geom_point() + geom_line()
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time sequence") + ylab("SMA")
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA") + title("SMA vs Time (avg > 0.1)")
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA") + title(main = "SMA vs Time (avg > 0.1)")
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.1)")
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.1)")+
theme(plot.title = element_text(hjust = 5))
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.1)")+
theme(plot.title = element_text(hjust = 0))
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.1)")+
theme(plot.title = element_text(hjust = 0.5))
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df2 = read.csv(file = "feed_bulk.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
df2$time <- strftime(df2$created_at, format="%M:%S")
#plot single measurement
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.1)")+
theme(plot.title = element_text(hjust = 0.5))
#plot bulk
ggplot(df2, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.5)")+
theme(plot.title = element_text(hjust = 0.5))
setwd("~/Desktop/Kuliah/informationsystem/Assignments/informationsystem/assignment3/results")
library(dplyr)
library(ggplot2)
df1 = read.csv(file = "feed_single.csv", header = TRUE)
df2 = read.csv(file = "feed_bulk.csv", header = TRUE)
df1$time <- strftime(df1$created_at, format="%M:%S")
df2$time <- strftime(df2$created_at, format="%M:%S")
#plot single measurement
ggplot(df1, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.1)")+
theme(plot.title = element_text(hjust = 0.5))
#plot bulk
ggplot(df2, aes(x=entry_id, y=field1)) + geom_point() + geom_line()+xlab("Time") + ylab("SMA")+ggtitle("SMA vs Time (avg > 0.5)")+
theme(plot.title = element_text(hjust = 0.5))
